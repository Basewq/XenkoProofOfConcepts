// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Stride Shader Mixin Code Generator.
// To generate it yourself, please install Stride.VisualStudio.Package .vsix
// and re-save the associated .sdfx.
// </auto-generated>

using System;
using Stride.Core;
using Stride.Rendering;
using Stride.Graphics;
using Stride.Shaders;
using Stride.Core.Mathematics;
using Buffer = Stride.Graphics.Buffer;

namespace SceneEditorExtensionExample.Rendering
{
    public static partial class MaterialGrassDiffuseMapKeys
    {
        public static readonly ObjectParameterKey<Texture> BrightnessMap = ParameterKeys.NewObject<Texture>();
        public static readonly ValueParameterKey<float> BrightnessMapWorldLength = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> BrightnessMapMinValue = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> BrightnessMapMaxValue = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<bool> IsBrightnessMapLevelsEnabled = ParameterKeys.NewValue<bool>();
        public static readonly ValueParameterKey<int> BrightnessMapLevels = ParameterKeys.NewValue<int>();
        public static readonly ValueParameterKey<float> GlobalBrightness = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<Color3> GrassTopColor = ParameterKeys.NewValue<Color3>();
        public static readonly ValueParameterKey<Color3> GrassBottomColor = ParameterKeys.NewValue<Color3>();
    }
}
